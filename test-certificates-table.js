const { Datastore } = require('@google-cloud/datastore');

// Inicializace Datastore
const datastore = new Datastore({ projectId: 'vernostkarty-db' });

async function testCertificatesTable() {
  console.log('üîç Kontrola tabulky certificates...');
  
  try {
    // Naƒçten√≠ v≈°ech z√°znam≈Ø z tabulky certificates
    const query = datastore.createQuery('certificates').order('name');
    const [certificates] = await datastore.runQuery(query);
    
    console.log(`üìã Nalezeno ${certificates.length} z√°znam≈Ø v tabulce certificates:`);
    
    let availableCount = 0;
    let assignedCount = 0;
    
    certificates.forEach((cert, index) => {
      console.log(`\nüîê Z√°znam ${index + 1}:`);
      console.log(`  - name: ${cert.name}`);
      console.log(`  - fullId: ${cert.fullId || 'null (VOLN√ù)'}`);
      console.log(`  - passTypeIdentifier: ${cert.passTypeIdentifier || 'CHYB√ç'}`);
      console.log(`  - keypath: ${cert.keypath || 'CHYB√ç'}`);
      console.log(`  - pempath: ${cert.pempath || 'CHYB√ç'}`);
      
      if (cert.fullId === null || cert.fullId === undefined) {
        availableCount++;
      } else {
        assignedCount++;
      }
    });
    
    console.log(`\nüìä STATISTIKY:`);
    console.log(`  - Celkem z√°znam≈Ø: ${certificates.length}`);
    console.log(`  - Voln√Ωch certifik√°t≈Ø: ${availableCount}`);
    console.log(`  - P≈ôi≈ôazen√Ωch certifik√°t≈Ø: ${assignedCount}`);
    
    if (availableCount === 0) {
      console.log(`\n‚ö†Ô∏è  VAROV√ÅN√ç: ≈Ω√°dn√© voln√© certifik√°ty! assignCertificate funkce nebude moci p≈ôi≈ôadit ≈æ√°dn√Ω certifik√°t.`);
    } else {
      console.log(`\n‚úÖ OK: M√°me ${availableCount} voln√Ωch certifik√°t≈Ø pro p≈ôi≈ôazen√≠.`);
    }
    
  } catch (error) {
    console.error('‚ùå Chyba p≈ôi kontrole tabulky certificates:', error);
  }
}

// Spu≈°tƒõn√≠ testu
testCertificatesTable();
